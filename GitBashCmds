Git Bash Cmds :

1. touch file_name create file 
2. echo "content" >> fileName
3. cd NAME-OF-DIRECTORY	Go into a directory to work in it
4. cd ..	Go back one directory
5. ls	List what’s in the current directory
6. ls a*	List what’s in the current directory that starts with a
7. ls *.md	List what’s in the current directory that ends with .md
8. mkdir NAME-OF-YOUR-DIRECTORY	Create a new directory
9. cat README.md	Display the contents of a text file you created previously
10.pwd	Show the current directory
11.clear	Clear the shell window

12.vim filename open file in vim editor
   -> press i to insert content
   -> press esc then :x and then enter to exit and save the modified changes 
***************************************************************************************
13.	git config to set globle user to trace who commited what 
14. git init initialize the git very first time to trace under git 
15. git status 
16. git add or git add .
17. git commit -m "msg"
18. git log     come out from git log -> press q
	git log -> what commits have you done so far.
	git log -p -5 -> shows last 5 commits, you can change five to any number
19. git diff -> to know the difference between local file and commited file come out from git log -> press q
	git diff -> compare working tree to stagging area.
	git diff --stage -> compare stagging area to last commit

git rm fileName -> removed file from working area as well as stagging area.
git rm --cached fileName -> removed only from stagging area 

git clone <remote repo url> --> clone existing remote repository

20. git remote add origin https://github.com/kamlesh90/nslgigs.git  

21. git remote -> know the name of remote repository
22. git remote rm origin
23. git push origin master <remote url> for fisrt time

24. git checkout -b branchName -> creates new branch and switched to branch  
	git checkout -> match files of working directory with last commit 
	git checkout -f -> match all files of working directory with last commit 
	
25. git merge
26. git branch -D -> to delete branch switch to other branch and then delete suppose you want to delete feature/circle_change then switch to main and then delete feature/circle_change
    git push origin -d feature/product_service -> to delete 
	
27. git branch
28. git rm --cached <file>... to unstage
29. git branch --> To see local branches
30. git branch -r --> To see remote branches
31.	git branch -a --> To see all local and remote branches

32. rm -fr .git -> remove initialized git repository 

33. git rebas -> Rebasing is the process of moving or combining a sequence of commits to a new base commit

*******************************************************************************************************************************************
		*****************************************************
		**	or create a new repository on the command line ** 
		*****************************************************
echo "# abc" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/kamlesh90/abc.git
git push -u origin main
---------------------------------------------------------
- or push an existing repository from the command line --
---------------------------------------------------------
git remote add origin https://github.com/kamlesh90/abc.git
git branch -M main
git push -u origin main
…or import code from another repository

To push the current branch and set the remote as upstream, use
    git push --set-upstream origin feature/circle_change
 
=================================================================================================================
       *************************
	   *************************
	   ** shortcuts of github **
	   *************************
	   *************************
	   
1. press ? to show all shortcuts make sure you press ? only in lenovo for ? need to press "shift+?" 

2. we can point out particular code or line by pressing the line number show it will point out the like below url so others can directly 
   focus on the same thing not all over the github 
   and if more lines or there then we press "shift + line"
https://github.com/kamlesh90/nslgigs/blob/master/GitBashCmds#L42
https://github.com/kamlesh90/nslgigs/blob/master/GitBashCmds#L42-L50

3. blame
   by using this function we can see the last commit and and changes as per that commit green shows new stuff added and red shows stuff 
   deleted 

********************************************************************************************************************************************

https://www.youtube.com/watch?v=f1wnYdLEpgI  --> git rebase 6 min video